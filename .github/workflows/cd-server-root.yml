name: API Deployment (root-server)

on:
  push:
    branches: [ "main" ]
  # workflow_run:
  #   workflows: ["API Integration"] 
  #   types:
  #     - completed

jobs: 

  build:

    runs-on: [self-hosted, root-server-runner]

    steps:
    - run: |
        ls
        sudo chown -R $USER Issue-Tracker
    - uses: actions/checkout@v4
      with:
        sparse-checkout: |
          ./scripts
          ./server-configs
          ./compose-server-root.yml

      
    - name: Delete Old Containers
      run: |
        sudo docker rm -f $(sudo docker ps -qa) || true
        sudo bash -c 'echo y | docker system prune' 


    - name: Compose Up Services 
      env:
        COMPOSE_FNAME: compose-server-root.yml
        API_DOMAIN: ${{ vars.API_DOMAIN }}
        EMAIL: ${{ secrets.EMAIL }} 
        CONFIG_TYPE: root-server
        CERT: ${{ secrets.CERT }}
        CERT_KEY: ${{ secrets.CERT_KEY }}
      run: | 
        touch .env.server && touch .env.proxy
        sudo bash -c 'echo "${{ secrets.SERVER_ENV }}" > .env.server'
        sudo bash -c 'echo "${{ secrets.NGINX_ENV }}" > .env.proxy'
        sudo --preserve-env=API_DOMAIN bash -c 'echo "SERVER_NAME=$API_DOMAIN" >> .env.proxy'
        chmod +x ./scripts/server/compose.sh
        ./scripts/server/compose.sh