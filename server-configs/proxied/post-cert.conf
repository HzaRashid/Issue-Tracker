map $http_origin $allow_origin {
	~^https?://(.*\.)flow-issue-tracker.com(:\d+)?$ $http_origin;
	# NGINX won't set empty string headers, so if no match, header is unset.
	default "";
}


upstream api {
	server api-server:8080;
}


server {    
	
	listen [::]:443 ssl;
    listen 443 ssl;
	listen 80;

    ssl_certificate /etc/letsencrypt/live/${SERVER_NAME}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${SERVER_NAME}/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;


	server_name ${SERVER_NAME};

	location / {
		proxy_set_header Access-Control-Allow-Origin $allow_origin;
		proxy_set_header Access-Control-Allow-Credentials true;
		proxy_set_header Access-Control-Allow-Methods GET,POST,PUT,OPTIONS;
		add_header Access-Control-Allow-Headers 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
		proxy_pass_header Access-Control-Allow-Headers;

		proxy_pass http://api;

		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;

		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header Cookie $http_cookie;

		chunked_transfer_encoding off;
		proxy_buffering off;
		proxy_cache off;

	}


}

# server {	
	
# 	listen 80;
# 	listen [::]:80;

#     location / {
# 		add_header Access-Control-Allow-Origin $allow_origin;
# 		add_header Access-Control-Allow-Credentials true;
# 		add_header Access-Control-Allow-Methods GET,POST,PUT,OPTIONS;
# 		add_header Access-Control-Allow-Headers 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With' always;
#         return 204 https://$host$request_uri/;
#     }

# 	location /.well-known/acme-challenge/ {
# 		root /var/www/certbot;
# 	}

# 	server_name ${SERVER_NAME};

# }